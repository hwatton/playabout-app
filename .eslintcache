[{"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\index.js":"1","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\reportWebVitals.js":"2","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\App.js":"3","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\playground.jsx":"4","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\normal.jsx":"5","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\hookD3Component.jsx":"6","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\board.jsx":"7","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\square.jsx":"8","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\knight.jsx":"9","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\motionDiv.jsx":"10","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\d3popUpdiv.jsx":"11","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\functions.js":"12","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\hoverDiv.jsx":"13","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\names.js":"14","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\styleD\\styledWithTailwind.jsx":"15","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\interactiveGraph.jsx":"16","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\graphs\\linegraph.jsx":"17","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\graphs\\barChart.jsx":"18","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\graphs\\pieChart.jsx":"19","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\routing.js":"20","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\routerNavBar.jsx":"21","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\d3div.jsx":"22","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\navbar\\navbar.jsx":"23","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\about\\about.jsx":"24","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\contact\\contact.jsx":"25","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\rainbowCols.js":"26","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\contact\\contactInfo.jsx":"27"},{"size":524,"mtime":1614987125411,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":3797,"mtime":1614987125403,"results":"31","hashOfConfig":"29"},{"size":870,"mtime":1611414434756,"results":"32","hashOfConfig":"29"},{"size":537,"mtime":1611356491427,"results":"33","hashOfConfig":"29"},{"size":2168,"mtime":1613421429507,"results":"34","hashOfConfig":"29"},{"size":851,"mtime":1611685887737,"results":"35","hashOfConfig":"36"},{"size":371,"mtime":1611685887741,"results":"37","hashOfConfig":"36"},{"size":95,"mtime":1611685887737,"results":"38","hashOfConfig":"36"},{"size":2399,"mtime":1614629363501,"results":"39","hashOfConfig":"29"},{"size":1200,"mtime":1612820508679,"results":"40","hashOfConfig":"29"},{"size":518,"mtime":1612819271900,"results":"41","hashOfConfig":"29"},{"size":409,"mtime":1613296360927,"results":"42","hashOfConfig":"29"},{"size":312,"mtime":1612819271908,"results":"43","hashOfConfig":"29"},{"size":3739,"mtime":1613421366925,"results":"44","hashOfConfig":"29"},{"size":1622,"mtime":1615324764248,"results":"45","hashOfConfig":"29"},{"size":2276,"mtime":1614032271167,"results":"46","hashOfConfig":"29"},{"size":2184,"mtime":1613914707327,"results":"47","hashOfConfig":"29"},{"size":2813,"mtime":1614032271167,"results":"48","hashOfConfig":"29"},{"size":1057,"mtime":1615324764256,"results":"49","hashOfConfig":"29"},{"size":702,"mtime":1614987125411,"results":"50","hashOfConfig":"29"},{"size":358,"mtime":1614987125403,"results":"51","hashOfConfig":"29"},{"size":2021,"mtime":1614987125403,"results":"52","hashOfConfig":"29"},{"size":1189,"mtime":1615324764232,"results":"53","hashOfConfig":"29"},{"size":546,"mtime":1615324764240,"results":"54","hashOfConfig":"29"},{"size":535,"mtime":1615324764248,"results":"55","hashOfConfig":"29"},{"size":845,"mtime":1615327529014,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"zolefo",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1csll0i",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\index.js",[],["120","121"],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\reportWebVitals.js",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\App.js",["122"],"import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Thingy from \"./components/playground.jsx\";\r\nimport Normal from \"./components/normal.jsx\";\r\nimport D3BarChart from \"./components/hookD3Component.jsx\";\r\nimport PopUpData from \"./components/d3popUpdiv.jsx\";\r\nimport InterGraph from \"./components/interactiveGraph.jsx\";\r\nimport dataMaker from \"./components/functions.js\";\r\nimport StyledDiv from \"./components/styleD/styledWithTailwind.jsx\";\r\nimport Rotate from \"./components/motionDiv.jsx\";\r\nimport Navbar from \"./components/navbar/navbar.jsx\";\r\n\r\nfunction MainPage() {\r\n  let onOrOff = {\r\n    thing: false,\r\n    normal: true,\r\n    d3: true,\r\n    rotate: true,\r\n    popUp: true,\r\n    styledBit: true,\r\n    iGraph: false,\r\n    navBar: false\r\n  };\r\n\r\n  const [load, changeLoad] = useState(onOrOff);\r\n  const [data, setData] = useState(dataMaker(40));\r\n\r\n  function reloadData() {\r\n    let d = dataMaker(40);\r\n\r\n    setData(d);\r\n  }\r\n\r\n  function randomLoader() {\r\n    let newObj = {};\r\n\r\n    for (let [k, v] of Object.entries(load)) {\r\n      newObj[k] = Math.random() < 0.5;\r\n    }\r\n    changeLoad(newObj);\r\n  }\r\n\r\n  function navLoader() {\r\n    let turnemOff;\r\n\r\n    if (!load.navBar) {\r\n      turnemOff = {\r\n        thing: true,\r\n        normal: true,\r\n        d3: true,\r\n        rotate: true,\r\n        popUp: true,\r\n        styledBit: true,\r\n        iGraph: false,\r\n        navBar: true\r\n      };\r\n    } else {\r\n      turnemOff = {\r\n        thing: true,\r\n        normal: true,\r\n        d3: true,\r\n        rotate: true,\r\n        popUp: true,\r\n        styledBit: true,\r\n        iGraph: false,\r\n        navBar: false\r\n      };\r\n    }\r\n    changeLoad(turnemOff);\r\n  }\r\n\r\n  function graphLoader() {\r\n    let turnemOff;\r\n\r\n    if (!load.iGraph) {\r\n      turnemOff = {\r\n        thing: false,\r\n        normal: false,\r\n        d3: false,\r\n        rotate: false,\r\n        popUp: false,\r\n        styledBit: false,\r\n        iGraph: true,\r\n        navBar: false\r\n      };\r\n    } else {\r\n      turnemOff = {\r\n        thing: true,\r\n        normal: true,\r\n        d3: true,\r\n        rotate: true,\r\n        popUp: true,\r\n        styledBit: true,\r\n        iGraph: false,\r\n        navBar: false\r\n      };\r\n    }\r\n    changeLoad(turnemOff);\r\n  }\r\n\r\n  /* next -  throw some functionality in to edit the d3 bar data */\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div\r\n        className=\"topBit\"\r\n        style={{\r\n          backgroundColor: \"#ffccff\",\r\n          borderRadius: \"5px\",\r\n          borderStyle: \"solid\",\r\n          borderWidth: \"1px\",\r\n          border: \"red\"\r\n        }}\r\n      >\r\n        <button onClick={randomLoader}>LOAD random conditional</button>\r\n        <button className=\"graphBtn\" onClick={graphLoader}>\r\n          {load.iGraph ? \"Unload Graph Component\" : \"Load Interactive Graph\"}\r\n        </button>\r\n        <button className=\"graphBtn\" onClick={navLoader}>\r\n          {load.navBar ? \"Unload Navbar\" : \"Load Navbar\"}\r\n        </button>\r\n      </div>\r\n      <div className=\"secondBit\">\r\n        {load.navBar && <Navbar />}\r\n        {load.thing && <Thingy className=\"Thingy\" text=\"two or three\" />}\r\n        {load.normal && (\r\n          <Normal\r\n            text=\"Jam Sandwiches, 10 for a pound\"\r\n            height=\"100\"\r\n            width=\"200\"\r\n          />\r\n        )}\r\n        {load.d3 && (\r\n          <D3BarChart clicky={reloadData} data={data} width={400} height={50} />\r\n        )}\r\n\r\n        {load.d3 && <PopUpData data={dataMaker(10)} />}\r\n        {load.styledBit && (\r\n          <StyledDiv\r\n            clickAction={randomLoader}\r\n            ridiculousMessage=\"checkOut at the checkout please\"\r\n          />\r\n        )}\r\n        {load.iGraph && <InterGraph />}\r\n        {load.rotate && <Rotate />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\playground.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\normal.jsx",["123","124"],"import react from \"react\"\r\nimport * as d3 from \"d3\"\r\nimport * as jstat from \"jstat\"\r\n\r\nfunction Normal(props) {\r\nlet ht = props.height\r\nlet wd = props.width\r\nconst line = d3.line()\r\n.x(d=>d.x)\r\n.y(d=>d.y)\r\n\r\nlet arr = []\r\nfor (let i = 0;i<wd;i++) {\r\n    arr.push({x:i, y:jstat.normal.sample(wd/2,40)})\r\n}\r\n\r\n\r\n    return (\r\n        <div>  \r\n        <p>{props.text}</p>\r\n        <svg\r\n        \r\n        >\r\n            <path className=\"normal-line\" d={line(arr)}/>\r\n        </svg>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Normal","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\hookD3Component.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\board.jsx",[],["125","126"],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\square.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\knight.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\motionDiv.jsx",["127","128"],"import React, { useRef, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n{\r\n  /* just here to play about with basic ideas in framer motion */\r\n}\r\nconst Rotate = () => {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const constraintsRef = useRef();\r\n\r\n  const variant = {\r\n    active: {\r\n      rotate: 360,\r\n      scale: 1,\r\n      opacity: 1\r\n    },\r\n    inactive: {\r\n      rotate: 0,\r\n      scale: 1,\r\n      opacity: 0\r\n    }\r\n  };\r\n\r\n  const [dragColour, setDragColour] = useState({ div: \"white\", svg: \"blue\" });\r\n\r\n  return (\r\n    <div className=\"md-holder\">\r\n      <br />\r\n      <button\r\n        className=\"Button motion-button\"\r\n        onClick={() => setIsActive(!isActive)}\r\n      >\r\n        {isActive ? \"Drag it!\" : \"Find it!\"}\r\n      </button>\r\n      <motion.div\r\n        className=\"motionDiv\"\r\n        variants={variant}\r\n        animate={isActive ? \"active\" : \"inactive\"}\r\n      >\r\n        <div\r\n          className=\"constrainingDiv\"\r\n          ref={constraintsRef}\r\n          style={{\r\n            margin: \"10%\",\r\n            height: \"80%\",\r\n            width: \"80%\"\r\n          }}\r\n        >\r\n          <motion.div\r\n            style={{\r\n              left: 50,\r\n              width: 150,\r\n              height: 150,\r\n              borderRadius: 30,\r\n              backgroundColor: dragColour.div,\r\n              cursor: \"grab\",\r\n              alignItems: \"center\"\r\n            }}\r\n            drag\r\n            dragConstraints={constraintsRef}\r\n            dragElastic={0.5}\r\n            onDrag={() => {\r\n              setIsFinished(false);\r\n              setDragColour({ div: \"red\", svg: \"green\" });\r\n            }}\r\n            onDragEnd={() => {\r\n              setIsFinished(true);\r\n              setDragColour({ div: \"white\", svg: \"blue\" });\r\n\r\n              setTimeout((d) => {\r\n                setIsFinished(false);\r\n              }, 2000);\r\n            }}\r\n            whileTap={{ cursor: \"grabbing\" }}\r\n          >\r\n            <div>\r\n              <svg height=\"150\" width=\"150\">\r\n                <circle\r\n                  r=\"20\"\r\n                  transform=\"translate(75, 75)\"\r\n                  fill={dragColour.svg}\r\n                />\r\n              </svg>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rotate;\r\n","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\d3popUpdiv.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\functions.js",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\hoverDiv.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\names.js",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\styleD\\styledWithTailwind.jsx",["129"],"import styles from './styles.css'\r\nimport {useState} from 'react'\r\n\r\nfunction StyledDiv(props) {\r\nlet message = `a random number here: ${Math.random()}`\r\n\r\nconst [showModal , setShowModal] = useState(false)\r\n\r\nconst popUpThingy = (\r\n    <>\r\n          <div\r\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n            onClick={() => setShowModal(false)}\r\n          >\r\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n              {/*content*/}\r\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                {/*header*/}\r\n                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\r\n                  <h3 className=\"text-2xl font-semibold\">\r\n                    Thanks for Clicking, you're a hero\r\n                  </h3>\r\n                  <button\r\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                      ×\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n                {/*body*/}\r\n                <div className=\"relative p-6 flex-auto\">\r\n                  <p className=\"my-4 text-gray-600 text-lg leading-relaxed\">\r\n                   Stop tyring to hit me and hit me! <br/>\r\n                   I know what you're tyring to do...<br/>\r\n                   I'm trying to free your mind.....\r\n                  </p>\r\n                </div>\r\n                {/*footer*/}\r\n                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\r\n                  <button\r\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{ transition: \"all .15s ease\" }}\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                    type=\"button\"\r\n                    style={{ transition: \"all .15s ease\" }}\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    Save Changes\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n  )\r\n\r\n\r\n    return (\r\n        <div className=\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md flex items-center space-x-4\">\r\n  \r\n  <div>\r\n    <div className=\"text-xl font-medium text-black\">Neo!</div>\r\n    <p className=\"text-gray-500\">Green pill or red?!</p>\r\n    <p className=\"text-gray-500\">I would like you to {props.ridiculousMessage}</p>\r\n    <p className=\"text-gray-700\">{message}</p>\r\n  </div>\r\n  <button onClick={props.clickAction} className=\"btn btn-green\">\r\n  Green Button\r\n</button>\r\n<button onClick={()=> setShowModal(true)} className=\"btn btn-red\">\r\n  Show the popup thing\r\n</button>\r\n{showModal && popUpThingy}\r\n\r\n\r\n</div>\r\n    )\r\n}\r\n\r\nexport default StyledDiv","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\interactiveGraph.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\graphs\\linegraph.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\graphs\\barChart.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\graphs\\pieChart.jsx",["130","131"],"import * as d3 from \"d3\";\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nconst PieChart = (props) => {\r\n  const d3Container = useRef(null);\r\n  const svgHeight = 200;\r\n  const svgWidth = 300;\r\n  let pieDataTimer;\r\n\r\n  useEffect(() => {\r\n    const svgC = d3.select(d3Container.current);\r\n    const newData = props.testInfo;\r\n\r\n    const pie = d3.pie().value(function (d) {\r\n      return d.cv;\r\n    });\r\n    const data_ready = pie(newData);\r\n\r\n    let arcFunc = d3.arc().innerRadius(0).outerRadius(90);\r\n\r\n    let pathData = [];\r\n    data_ready.forEach((d, i) => {\r\n      arcFunc.startAngle(d.startAngle).endAngle(d.endAngle);\r\n\r\n      let tempObj = arcFunc(d.cv);\r\n      pathData.push({\r\n        path: tempObj,\r\n        colour: d.data.colourNumber,\r\n        number: d.data.cv,\r\n        index: i\r\n      });\r\n    });\r\n\r\n    svgC.select(\".pathGroup\").remove();\r\n    //console.log(newData)\r\n    const update = svgC\r\n      .append(\"g\")\r\n      .attr(\"class\", \"pathGroup\")\r\n      .attr(\r\n        \"transform\",\r\n        \"translate(\" + svgHeight / 2 + \" \" + svgHeight / 2 + \")\"\r\n      )\r\n      .selectAll(\"path\")\r\n      .data(pathData);\r\n    /*\r\n      update.enter()\r\n      .append(\"path\")\r\n      .attr(\"class\", \"linePath\")\r\n      .attr(\"d\", lineFunc(lineData))\r\n      .style(\"stroke\", (d)=>{return d3.interpolateTurbo(d.lineColour)})\r\n    */\r\n\r\n    update\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", (d) => {\r\n        return d.path;\r\n      })\r\n      .attr(\"fill\", function (d) {\r\n        return d3.interpolateCool(d.colour);\r\n      })\r\n      .style(\"stroke\", \"black\")\r\n      .style(\"stroke-width\", \"1px\")\r\n      .on(\"mouseover\", (e, d) => {\r\n        if (pieDataTimer) {\r\n          window.clearTimeout(pieDataTimer);\r\n        }\r\n\r\n        let textTwo = \"Value: \" + d.number;\r\n        d3.select(\".textOne\").text(\"Data\");\r\n\r\n        d3.select(\".textTwo\").text(textTwo);\r\n\r\n        let textThree = \"Colour: \" + d3.interpolateCool(d.colour);\r\n\r\n        d3.select(\".textThree\").text(textThree);\r\n\r\n        let textFour = \"Index: \" + (d.index + 1);\r\n\r\n        d3.select(\".textFour\").text(textFour);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        pieDataTimer = window.setTimeout(() => {\r\n          d3.selectAll(\".pieText\").text(\"\");\r\n        }, 3500);\r\n      });\r\n\r\n    /* axes */\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"chartContainer\">\r\n      <br />\r\n      <svg\r\n        className=\"d3-component\"\r\n        width={svgHeight}\r\n        height={svgHeight}\r\n        ref={d3Container}\r\n      />\r\n      <div className=\"hoverData\">\r\n        <br />\r\n        <p className=\"textOne pieText bold\"></p>\r\n        <p className=\"textTwo pieText \"></p>\r\n        <p className=\"textThree pieText \"></p>\r\n        <p className=\"textFour pieText \"></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\routing.js",["132","133"],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\routerNavBar.jsx",["134"],"import { Link } from \"react-router-dom\";\r\nimport styles from \"./routerNav.css\";\r\n\r\nfunction RouterNavBar() {\r\n  return (\r\n    <nav className=\"nav-header\">\r\n      <ul className=\"router-nav-holder\">\r\n        <li className=\"router-nav-link\">\r\n          <Link to=\"/\" className=\"navText\">\r\n            Main page\r\n          </Link>\r\n        </li>\r\n        <li className=\"router-nav-link\">\r\n          <Link className=\"navText\" to=\"/about\">\r\n            About\r\n          </Link>\r\n        </li>\r\n        <li className=\"router-nav-link\">\r\n          <Link className=\"navText\" to=\"/contact\">\r\n            Contact\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default RouterNavBar;\r\n","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\d3div.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\navbar\\navbar.jsx",["135","136","137","138"],"import * as d3 from \"d3\";\r\nimport styles from \"./nav.css\";\r\nimport { useState } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nfunction Navbar(props) {\r\n  const lineFunc = d3\r\n    .line()\r\n    .x((d) => d.x)\r\n    .y((d) => d.y);\r\n\r\n  const barOne = [\r\n    { x: 0, y: 2 },\r\n    { x: 20, y: 2 }\r\n  ];\r\n\r\n  const links = [\r\n    { name: \"home\", url: \"#home\", type: \"text\" },\r\n    { name: \"about\", url: \"#about\", type: \"text\" },\r\n    { name: \"contact\", url: \"#contact\", type: \"text\" },\r\n    { name: \"burger\", url: null, type: \"svg\" }\r\n  ];\r\n\r\n  const barOnePath = lineFunc(barOne);\r\n\r\n  console.log(barOnePath);\r\n\r\n  const strokeStyle = {\r\n    stroke: \"black\",\r\n    strokeWidth: \"2px\",\r\n    fill: \"none\"\r\n  };\r\n\r\n  const [menuActive, setMenuActive] = useState(false);\r\n\r\n  function showMenu() {\r\n    if (!menuActive) {\r\n      setMenuActive(true);\r\n    } else {\r\n      setMenuActive(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={menuActive ? \"topnav navresponsive\" : \"topnav\"}\r\n        id=\"myTopnav\"\r\n      >\r\n        <a\r\n          className={menuActive ? \" navitem clicked\" : \"navitem\"}\r\n          href=\"#home\"\r\n          class=\"active\"\r\n        >\r\n          Home\r\n        </a>\r\n        <a className={menuActive ? \" navitem clicked\" : \"navitem\"} href=\"#news\">\r\n          News\r\n        </a>\r\n        <a\r\n          className={menuActive ? \" navitem clicked\" : \"navitem\"}\r\n          href=\"#contact\"\r\n        >\r\n          Contact\r\n        </a>\r\n        <a\r\n          className={menuActive ? \" navitem clicked\" : \"navitem\"}\r\n          href=\"#about\"\r\n        >\r\n          About\r\n        </a>\r\n      </div>\r\n      <div className=\"navburger navitem\" onClick={() => showMenu()}>\r\n        <svg height=\"24\" width=\"20\">\r\n          <path d=\"M1,6L19,6\" style={strokeStyle}></path>\r\n          <path d=\"M1,12L19,12\" style={strokeStyle}></path>\r\n          <path d=\"M1,18L19,18\" style={strokeStyle}></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\about\\about.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\contact\\contact.jsx",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\rainbowCols.js",[],"C:\\Users\\harry\\projects\\react\\playabout-app\\src\\components\\contact\\contactInfo.jsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":37,"column":18,"nodeType":"145","messageId":"146","endLine":37,"endColumn":19},{"ruleId":"143","severity":1,"message":"147","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"148","line":6,"column":5,"nodeType":"145","messageId":"146","endLine":6,"endColumn":7},{"ruleId":"139","replacedBy":"149"},{"ruleId":"141","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":4,"column":1,"nodeType":"153","messageId":"154","endLine":6,"endColumn":2},{"ruleId":"143","severity":1,"message":"155","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":20},{"ruleId":"143","severity":1,"message":"156","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":14},{"ruleId":"143","severity":1,"message":"157","line":7,"column":9,"nodeType":"145","messageId":"146","endLine":7,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":83,"column":24,"nodeType":"160","endLine":85,"endColumn":17},{"ruleId":"143","severity":1,"message":"161","line":10,"column":21,"nodeType":"145","messageId":"146","endLine":10,"endColumn":29},{"ruleId":"143","severity":1,"message":"162","line":38,"column":10,"nodeType":"145","messageId":"146","endLine":38,"endColumn":17},{"ruleId":"143","severity":1,"message":"156","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"156","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"163","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":25},{"ruleId":"143","severity":1,"message":"164","line":4,"column":27,"nodeType":"145","messageId":"146","endLine":4,"endColumn":33},{"ruleId":"143","severity":1,"message":"165","line":17,"column":9,"nodeType":"145","messageId":"146","endLine":17,"endColumn":14},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'v' is assigned a value but never used.","Identifier","unusedVar","'react' is defined but never used.","'ht' is assigned a value but never used.",["166"],["167"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'isFinished' is assigned a value but never used.","'styles' is defined but never used.","'svgWidth' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'pieDataTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setd3div' is assigned a value but never used.","'Contact' is defined but never used.","'AnimatePresence' is defined but never used.","'motion' is defined but never used.","'links' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]